class foo<`a> {
    bar :: func(`a) -> `a
}

// monad
class monad<`a :: * -> *> require foo<`a> {
    infix >>= :: func(`a<`b>, func (`b) -> `a<`c>) -> `a<`c>
    return :: func(`b) -> `a<`b>
}

instance monad<mytype<`a>> {
    func infix >>=(a, b) {
        b(a.x)
    }
}

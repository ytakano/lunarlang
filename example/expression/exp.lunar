func pred( a : c:d
    ,
    b :
    func (  `a
        , `c  < `d, `e > ) -> `b) -> u32 require eq<a>, eq<b> {
    7 + 3 * -  10 + // 40
    // 50

    5 * 9
    20

}

func binop(a : t<u32>, b) : u64 {
    1 + 2 - 3 + 4 * 5 / 6 + 7
}

func plus(a, b) {
    a + b
}

func assign(a, b) {
    let x = plus(a, b) in x + 3
}

func ifexpr(a, b) {
    if a > b {
        (a, b)
    } elif a == b {
        (a, a)
    } else {
        (b, a)
    }
}

func typed(a : u32, b : u32, fun : func (u32, u32) : u32) : u32 {
    let x : u32 = fun(a, b)
    x
}

func pred(a, b) require eq<a>, eq<b> {
    cmp(a, b)
}
